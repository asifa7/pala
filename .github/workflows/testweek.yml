name: Run File Hash Manual

on:
  workflow_dispatch: # Manual trigger via GitHub UI
  # schedule:
    # - cron: '*/15 * * * *'  # every 15 minutes
jobs:
  run-powershell-script:
    runs-on: self-hosted
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Run PowerShell Script
        shell: Powershell
        run: |
          [System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $true }
          $username = "elastic"
          $password = "mGUt6fo9Hj=V7saEVatU"
          $pair = "$($username):$($password)"
          $bytes = [System.Text.Encoding]::ASCII.GetBytes($pair)
          $base64 = [Convert]::ToBase64String($bytes)
          $headers = @{ Authorization = "Basic $base64" }

          $folder =  "C:\\asif pala\\samples"
          $indexName = "filehash-samples"
          $esUri = "https://localhost:9200/$indexName/_doc"

          $allFiles = Get-ChildItem -Path $folder -Recurse -File

          foreach ($file in $allFiles) {
              try {
                  $hash = Get-FileHash -Path $file.FullName -Algorithm SHA256
                  $json = @{
                      FileName = $file.Name
                      FullPath = $file.FullName
                      SHA256 = $hash.Hash
                      LastWriteTime = $file.LastWriteTime.ToString("o")
                      ScanTimestamp = (Get-Date).ToString("o")
                  } | ConvertTo-Json -Depth 3

                  Invoke-RestMethod -Uri $esUri -Method POST -Body $json -ContentType "application/json" -Headers $headers

                  Write-Host "Sent to Elasticsearch: $($file.FullName)"
              } catch {
                  Write-Warning "Failed hashing or sending $($file.FullName): $_"
              }
          }
